name: CI/CD Pipeline

on:
  push:
    branches:
      - prod

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set vars
      run: |
        echo "BACKEND_IMAGE_TAG=${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.GCLOUD_PROJECT }}/avatar-images/avatar-backend" >> $GITHUB_ENV
        echo "FRONTEND_IMAGE_TAG=${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.GCLOUD_PROJECT }}/avatar-images/avatar-frontend" >> $GITHUB_ENV
        echo "NGINX_IMAGE_TAG=${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.GCLOUD_PROJECT }}/avatar-images/avatar-nginx" >> $GITHUB_ENV

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCLOUD_PROJECT }}
        service_account_key: ${{ secrets.GCLOUD_SERVICE_KEY }}
        export_deafult_credentias: true

    - name: Configure docker to use Artifact Registry
      run: gcloud auth configure-docker ${{ secrets.REGION }}-docker.pkg.dev

    - name: Build and push Docker image
      run: |
        echo "BACKEND_IMAGE_TAG=${{ env.BACKEND_IMAGE_TAG }}"
        cd api/ && docker build -t ${{ env.BACKEND_IMAGE_TAG }}:${GITHUB_SHA} .
        cd ../web/ && docker build -t ${{ env.FRONTEND_IMAGE_TAG }}:${GITHUB_SHA} -f Dockerfile .
        docker build -t ${{ env.NGINX_IMAGE_TAG }}:${GITHUB_SHA} -f Dockerfile.nginx .
        docker push ${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.GCLOUD_PROJECT }}/avatar-images/avatar-backend:${GITHUB_SHA}
        docker push ${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.GCLOUD_PROJECT }}/avatar-images/avatar-frontend:${GITHUB_SHA}
        docker push ${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.GCLOUD_PROJECT }}/avatar-images/avatar-nginx:${GITHUB_SHA}

    - name: Deploy to GKE
      run: |
        gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER }} --zone ${{ secrets.GKE_ZONE }}
        kubectl set image deployment/backend backend=${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.GCLOUD_PROJECT }}/avatar-images/avatar-backend:$GITHUB_SHA
        kubectl set image deployment/frontend frontend=${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.GCLOUD_PROJECT }}/avatar-images/avatar-frontend:$GITHUB_SHA
        kubectl set image deployment/nginx frontend=${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.GCLOUD_PROJECT }}/avatar-images/avatar-nginx:$GITHUB_SHA
