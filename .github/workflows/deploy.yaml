jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set vars
      run: |
        echo "BACKEND_IMAGE_TAG=${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.GCLOUD_PROJECT }}/avatar-images/avatar-backend:${{ github.sha }}" >> $GITHUB_ENV
        echo "FRONTEND_IMAGE_TAG=${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.GCLOUD_PROJECT }}/avatar-images/avatar-frontend:${{ github.sha }}" >> $GITHUB_ENV
        echo "NGINX_IMAGE_TAG=${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.GCLOUD_PROJECT }}/avatar-images/avatar-nginx:${{ github.sha }}" >> $GITHUB_ENV

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCLOUD_PROJECT }}
        service_account_key: ${{ secrets.GCLOUD_SERVICE_KEY }}
        export_default_credentials: true

    - name: Configure docker to use Artifact Registry
      run: gcloud auth configure-docker ${{ secrets.REGION }}-docker.pkg.dev

    - name: Build and push Docker images
      run: |
        echo "Backend image tag: ${{ env.BACKEND_IMAGE_TAG }}"
        echo "Frontend image tag: ${{ env.FRONTEND_IMAGE_TAG }}"
        echo "Nginx image tag: ${{ env.NGINX_IMAGE_TAG }}"

        cd api/ && docker build -t ${{ env.BACKEND_IMAGE_TAG }} -f Dockerfile .
        cd ../web/ && docker build -t ${{ env.FRONTEND_IMAGE_TAG }} -f Dockerfile .
        docker build -t ${{ env.NGINX_IMAGE_TAG }} -f web/Dockerfile.nginx .

        docker push ${{ env.BACKEND_IMAGE_TAG }}
        docker push ${{ env.FRONTEND_IMAGE_TAG }}
        docker push ${{ env.NGINX_IMAGE_TAG }}

    - name: Deploy to GKE
      run: |
        gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER }} --zone ${{ secrets.GKE_ZONE }}
        kubectl set image deployment/backend backend=${{ env.BACKEND_IMAGE_TAG }}
        kubectl set image deployment/frontend frontend=${{ env.FRONTEND_IMAGE_TAG }}
        kubectl set image deployment/nginx frontend=${{ env.NGINX_IMAGE_TAG }}
